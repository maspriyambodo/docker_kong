version: '3'

volumes:
  kong_db_data: {}  # Persistent volume for Postgres data

networks:
  kong-ee-net:
    driver: bridge
    external:
      name: nginx-proxy_network  # Use existing network

# Shared environment variables for reuse across services
x-kong-config: &kong-env
  KONG_DATABASE: postgres
  KONG_PG_HOST: kong-ee-database
  KONG_PG_DATABASE: kong
  KONG_PG_USER: kong
  KONG_PG_PASSWORD: kong

services:
  kong-ee-database:
    container_name: kong-ee-database
    image: postgres:latest
    restart: on-failure
    volumes:
      - kong_db_data:/var/lib/postgresql/data
    networks:
      - kong-ee-net
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 5s
      timeout: 10s
      retries: 10
    ports:
      - "5432:5432"

  kong-bootstrap:
    image: "${GW_IMAGE:-kong/kong-gateway:3.11.0.0}"
    container_name: kong-bootstrap
    networks:
      - kong-ee-net
    depends_on:
      kong-ee-database:
        condition: service_healthy
    restart: on-failure
    environment:
      <<: *kong-env
      KONG_PASSWORD: handyshake  # Admin password for GUI login (RBAC)
    command: ["sh", "-c", "kong stop || true && kong migrations bootstrap"]

  kong-cp:
    image: "${GW_IMAGE:-kong/kong-gateway:3.11.0.0}"
    container_name: kong-cp
    restart: on-failure
    networks:
      - kong-ee-net
    environment:
      <<: [*kong-env]
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_ADMIN_GUI_LISTEN: 0.0.0.0:8002, 0.0.0.0:8445 ssl
      KONG_ADMIN_GUI_URL: http://${GW_HOST:-localhost}:8002
      KONG_PASSWORD: handyshake
    depends_on:
      kong-bootstrap:
        condition: service_completed_successfully
    ports:
      - "8000:8000"   # Proxy HTTP
      - "8443:8443"   # Proxy HTTPS
      - "8001:8001"   # Admin API HTTP
      - "8444:8444"   # Admin API HTTPS
      - "8002:8002"   # Kong Manager HTTP
      - "8445:8445"   # Kong Manager HTTPS
